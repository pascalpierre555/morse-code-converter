
morse-code-converter.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000104  080001ac  080001ac  000011ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002b0  080002b8  000012b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002b0  080002b0  000012b8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080002b0  080002b0  000012b8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080002b0  080002b8  000012b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002b0  080002b0  000012b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080002b4  080002b4  000012b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000012b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000012b8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000078  00000000  00000000  000012e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000060  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000013c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  00001408  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000af5  00000000  00000000  00001434  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000000be  00000000  00000000  00001f29  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00002eb0  00000000  00000000  00001fe7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00004e97  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000005c  00000000  00000000  00004edc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000045  00000000  00000000  00004f38  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001ac <__do_global_dtors_aux>:
 80001ac:	b510      	push	{r4, lr}
 80001ae:	4c05      	ldr	r4, [pc, #20]	@ (80001c4 <__do_global_dtors_aux+0x18>)
 80001b0:	7823      	ldrb	r3, [r4, #0]
 80001b2:	b933      	cbnz	r3, 80001c2 <__do_global_dtors_aux+0x16>
 80001b4:	4b04      	ldr	r3, [pc, #16]	@ (80001c8 <__do_global_dtors_aux+0x1c>)
 80001b6:	b113      	cbz	r3, 80001be <__do_global_dtors_aux+0x12>
 80001b8:	4804      	ldr	r0, [pc, #16]	@ (80001cc <__do_global_dtors_aux+0x20>)
 80001ba:	f3af 8000 	nop.w
 80001be:	2301      	movs	r3, #1
 80001c0:	7023      	strb	r3, [r4, #0]
 80001c2:	bd10      	pop	{r4, pc}
 80001c4:	20000000 	.word	0x20000000
 80001c8:	00000000 	.word	0x00000000
 80001cc:	08000298 	.word	0x08000298

080001d0 <frame_dummy>:
 80001d0:	b508      	push	{r3, lr}
 80001d2:	4b03      	ldr	r3, [pc, #12]	@ (80001e0 <frame_dummy+0x10>)
 80001d4:	b11b      	cbz	r3, 80001de <frame_dummy+0xe>
 80001d6:	4903      	ldr	r1, [pc, #12]	@ (80001e4 <frame_dummy+0x14>)
 80001d8:	4803      	ldr	r0, [pc, #12]	@ (80001e8 <frame_dummy+0x18>)
 80001da:	f3af 8000 	nop.w
 80001de:	bd08      	pop	{r3, pc}
 80001e0:	00000000 	.word	0x00000000
 80001e4:	20000004 	.word	0x20000004
 80001e8:	08000298 	.word	0x08000298

080001ec <main>:
 *  Created on: Apr 4, 2025
 *      Author: peng
 */


int main(void) {
 80001ec:	b480      	push	{r7}
 80001ee:	af00      	add	r7, sp, #0
	return 0;
 80001f0:	2300      	movs	r3, #0
}
 80001f2:	4618      	mov	r0, r3
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr

080001fc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80001fc:	480d      	ldr	r0, [pc, #52]	@ (8000234 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80001fe:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000200:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000204:	480c      	ldr	r0, [pc, #48]	@ (8000238 <LoopForever+0x6>)
  ldr r1, =_edata
 8000206:	490d      	ldr	r1, [pc, #52]	@ (800023c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000208:	4a0d      	ldr	r2, [pc, #52]	@ (8000240 <LoopForever+0xe>)
  movs r3, #0
 800020a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800020c:	e002      	b.n	8000214 <LoopCopyDataInit>

0800020e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800020e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000210:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000212:	3304      	adds	r3, #4

08000214 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000214:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000216:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000218:	d3f9      	bcc.n	800020e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800021a:	4a0a      	ldr	r2, [pc, #40]	@ (8000244 <LoopForever+0x12>)
  ldr r4, =_ebss
 800021c:	4c0a      	ldr	r4, [pc, #40]	@ (8000248 <LoopForever+0x16>)
  movs r3, #0
 800021e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000220:	e001      	b.n	8000226 <LoopFillZerobss>

08000222 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000222:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000224:	3204      	adds	r2, #4

08000226 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000226:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000228:	d3fb      	bcc.n	8000222 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800022a:	f000 f811 	bl	8000250 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800022e:	f7ff ffdd 	bl	80001ec <main>

08000232 <LoopForever>:

LoopForever:
  b LoopForever
 8000232:	e7fe      	b.n	8000232 <LoopForever>
  ldr   r0, =_estack
 8000234:	20030000 	.word	0x20030000
  ldr r0, =_sdata
 8000238:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800023c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000240:	080002b8 	.word	0x080002b8
  ldr r2, =_sbss
 8000244:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000248:	2000001c 	.word	0x2000001c

0800024c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800024c:	e7fe      	b.n	800024c <ADC_IRQHandler>
	...

08000250 <__libc_init_array>:
 8000250:	b570      	push	{r4, r5, r6, lr}
 8000252:	4d0d      	ldr	r5, [pc, #52]	@ (8000288 <__libc_init_array+0x38>)
 8000254:	4c0d      	ldr	r4, [pc, #52]	@ (800028c <__libc_init_array+0x3c>)
 8000256:	1b64      	subs	r4, r4, r5
 8000258:	10a4      	asrs	r4, r4, #2
 800025a:	2600      	movs	r6, #0
 800025c:	42a6      	cmp	r6, r4
 800025e:	d109      	bne.n	8000274 <__libc_init_array+0x24>
 8000260:	4d0b      	ldr	r5, [pc, #44]	@ (8000290 <__libc_init_array+0x40>)
 8000262:	4c0c      	ldr	r4, [pc, #48]	@ (8000294 <__libc_init_array+0x44>)
 8000264:	f000 f818 	bl	8000298 <_init>
 8000268:	1b64      	subs	r4, r4, r5
 800026a:	10a4      	asrs	r4, r4, #2
 800026c:	2600      	movs	r6, #0
 800026e:	42a6      	cmp	r6, r4
 8000270:	d105      	bne.n	800027e <__libc_init_array+0x2e>
 8000272:	bd70      	pop	{r4, r5, r6, pc}
 8000274:	f855 3b04 	ldr.w	r3, [r5], #4
 8000278:	4798      	blx	r3
 800027a:	3601      	adds	r6, #1
 800027c:	e7ee      	b.n	800025c <__libc_init_array+0xc>
 800027e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000282:	4798      	blx	r3
 8000284:	3601      	adds	r6, #1
 8000286:	e7f2      	b.n	800026e <__libc_init_array+0x1e>
 8000288:	080002b0 	.word	0x080002b0
 800028c:	080002b0 	.word	0x080002b0
 8000290:	080002b0 	.word	0x080002b0
 8000294:	080002b4 	.word	0x080002b4

08000298 <_init>:
 8000298:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800029a:	bf00      	nop
 800029c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800029e:	bc08      	pop	{r3}
 80002a0:	469e      	mov	lr, r3
 80002a2:	4770      	bx	lr

080002a4 <_fini>:
 80002a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002a6:	bf00      	nop
 80002a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002aa:	bc08      	pop	{r3}
 80002ac:	469e      	mov	lr, r3
 80002ae:	4770      	bx	lr
